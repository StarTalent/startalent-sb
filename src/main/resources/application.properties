# REVIEW: Sugerencias de mejora:
#  Me parece que es mejor usar el archivo application.yml para configurar
#  las propiedades de la aplicación debido a que es más legible y fácil de mantener,
#  además que tiene un orden jerárquico que permite sobreescribir
#  propiedades de acuerdo al perfil de la aplicación.
#
#  Otras mejoras que soporta este tipo de archivos son:
#  - Posibilidad de incluir múltiples perfiles en un solo archivo, usando el separador '---'
#  - Soporte para propiedades de tipo lista, mapas y objetos
#  - Soporte de compatibilidad con Docker Compose
#  - YAML permite definir valores multilínea de forma más legible que properties
#  - Manejo superior de valores multilínea y caracteres especiales.
#
#  Esto sería de gran ayuda para configurar las propiedades de acuerdo al ambiente
#  de desarrollo, pruebas y producción, de esta forma se evita tener que modificar
#  el archivo de propiedades cada vez que se cambia de ambiente.

spring.application.name=startalent-sb

# REVIEW: Sugerencias de mejora:
#  Usar archivo .env para configurar las variables de entorno
#  Se considera una buena práctica para configurar las variables de entorno
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Para que se pueda ver el debug de las variables de entorno
logging.level.com.revenatium.startalent_sb.StartalentSbApplication=DEBUG

spring.jpa.generate-ddl=true

# REVIEW: Sugerencias de mejora:
#  Evitar el uso de OpenEntityManagerInViewFilter
#  https://vladmihalcea.com/the-open-session-in-view-anti-pattern/
#  Se considera una mala práctica y puede causar problemas de rendimiento
#  Problemas del tipo N+1 queries y carga perezosa no inicializada
spring.jpa.open-in-view=false
